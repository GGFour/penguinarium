# Generated by Django 5.2.6 on 2025-09-20 00:38
import uuid
import common.models
import django.db.models.deletion
import pulling.models.field_metadata
import pulling.models.table_metadata
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('global_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('data_source_id', models.AutoField(help_text='Primary key for the data source', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Human-readable name for the data source', max_length=255)),
                ('type', models.CharField(choices=[('database', 'Database'), ('api', 'API'), ('file', 'File'), ('stream', 'Stream'), ('cloud', 'Cloud Storage'), ('other', 'Other')], help_text='Type of data source (database, API, file, etc.)', max_length=50)),
                ('connection_info', models.JSONField(help_text='Configuration and connection details for the data source')),
            ],
            options={
                'verbose_name': 'Data Source',
                'verbose_name_plural': 'Data Sources',
                'ordering': ['name'],
                'abstract': False,
            },
        ),

        migrations.CreateModel(
            name='TableMetadata',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('global_id', models.CharField(default=common.models.generate_global_id, max_length=255, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('table_metadata_id', models.AutoField(help_text='Primary key for the table metadata', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the table or data structure', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Human-readable description of the table', null=True)),
                ('metadata', models.JSONField(default=pulling.models.table_metadata.default_metadata, help_text='Additional metadata about the table (schema, stats, etc.)')),
                ('data_source', models.ForeignKey(help_text='The data source this table belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='table_metadata_set', to='pulling.datasource')),
            ],
            options={
                'verbose_name': 'Table Metadata',
                'verbose_name_plural': 'Table Metadata',
                'ordering': ['data_source', 'name'],
                'abstract': False,
                'unique_together': {('data_source', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FieldMetadata',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('global_id', models.CharField(default=common.models.generate_global_id, max_length=255, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('field_metadata_id', models.AutoField(help_text='Primary key for the field metadata', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the field/column', max_length=255)),
                ('dtype', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('double', 'Double'), ('decimal', 'Decimal'), ('boolean', 'Boolean'), ('date', 'Date'), ('datetime', 'DateTime'), ('timestamp', 'Timestamp'), ('text', 'Text'), ('json', 'JSON'), ('array', 'Array'), ('binary', 'Binary'), ('uuid', 'UUID'), ('other', 'Other')], help_text='Data type of the field', max_length=50)),
                ('metadata', models.JSONField(default=pulling.models.field_metadata.default_metadata, help_text='Additional metadata about the field (constraints, format, etc.)')),
                ('table', models.ForeignKey(help_text='The table this field belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='field_metadata_set', to='pulling.tablemetadata')),
            ],
            options={
                'verbose_name': 'Field Metadata',
                'verbose_name_plural': 'Field Metadata',
                'ordering': ['table', 'name'],
                'unique_together': {('table', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FieldRelation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('global_id', models.CharField(default=common.models.generate_global_id, max_length=255, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('field_relation_id', models.AutoField(help_text='Primary key for the field relation', primary_key=True, serialize=False)),
                ('relation_type', models.CharField(choices=[('foreign_key', 'Foreign Key'), ('primary_key', 'Primary Key'), ('join', 'Join'), ('reference', 'Reference'), ('derived', 'Derived'), ('calculated', 'Calculated'), ('lineage', 'Data Lineage'), ('mapping', 'Field Mapping'), ('dependency', 'Dependency'), ('other', 'Other')], help_text='Type of relationship between the fields', max_length=50)),
                ('dst_field', models.ForeignKey(help_text='The destination field in the relationship', on_delete=django.db.models.deletion.CASCADE, related_name='destination_relations', to='pulling.fieldmetadata')),
                ('src_field', models.ForeignKey(help_text='The source field in the relationship', on_delete=django.db.models.deletion.CASCADE, related_name='source_relations', to='pulling.fieldmetadata')),
            ],
            options={
                'verbose_name': 'Field Relation',
                'verbose_name_plural': 'Field Relations',
                'ordering': ['src_field', 'dst_field'],
                'unique_together': {('src_field', 'dst_field', 'relation_type')},
            },
        ),
    ]
